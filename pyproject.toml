[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tncp-research-starter-kit"
version = "1.0.0"
description = "TNCP Research Starter Kit - Complete toolkit for cancer research, cellular dynamics, and computational biology"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "David Ferguson", email = "david.ferguson@tncp.org"},
]
maintainers = [
    {name = "TNCP Research Team", email = "research@tncp.org"},
]
keywords = [
    "cancer-research",
    "neuroscience", 
    "medical-imaging",
    "machine-learning",
    "bioinformatics",
    "computational-biology",
    "drug-discovery",
    "molecular-dynamics"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
]

dependencies = [
    # Core numerical and scientific
    "numpy>=1.24.0,<2.1.0",
    "scipy>=1.10.0",
    "numba>=0.57.0",
    
    # Visualization
    "matplotlib>=3.6.0",
    "plotly>=5.14.0",
    "seaborn>=0.12.0",
    
    # Machine Learning and Deep Learning
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "pytorch-lightning>=2.0.0",
    "scikit-learn>=1.2.0",
    "xgboost>=1.7.0",
    
    # Medical Imaging
    "SimpleITK>=2.2.0",
    "nibabel>=5.0.0",
    "pydicom>=2.3.0",
    "scikit-image>=0.20.0",
    
    # Bioinformatics and Structural Biology
    "biopython>=1.81",
    "biotite>=0.37.0",
    "gemmi>=0.6.0",
    "mdanalysis>=2.4.0",
    "rdkit>=2023.3.1",
    
    # Data Management
    "pandas>=2.0.0",
    "h5py>=3.8.0",
    "zarr>=2.14.0",
    
    # Configuration and CLI
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "rich>=13.3.0",
    "typer>=0.9.0",
    
    # Web and API
    "fastapi>=0.95.0",
    "uvicorn>=0.21.0",
    "httpx>=0.24.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.3.0",
    "ruff>=0.0.270",
    "mypy>=1.3.0",
    "pre-commit>=3.3.0",
    "ipykernel>=6.23.0",
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
]

docs = [
    "sphinx>=6.2.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
    "myst-parser>=1.0.0",
]

cuda = [
    "cupy-cuda12x>=12.0.0",
    "nvidia-ml-py>=12.535.0",
]

visualization = [
    "napari>=0.4.18",
    "vtk>=9.2.0",
    "pyvista>=0.39.0",
    "vispy>=0.13.0",
]

[project.scripts]
tncp = "tncp_starter_kit.cli.main:app"
tncp-server = "tncp_starter_kit.cli.server:main"
tncp-analyze = "tncp_starter_kit.cli.analyze:main"

[project.urls]
Homepage = "https://github.com/tncp/researchimagery"
Documentation = "https://tncp-researchimagery.readthedocs.io"
Repository = "https://github.com/tncp/researchimagery.git"
Changelog = "https://github.com/tncp/researchimagery/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/tncp/researchimagery/issues"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
tncp_starter_kit = [
    "resources/config/**/*.yaml",
    "resources/config/**/*.json",
    "resources/models/**/*.pt",
    "resources/data/**/*.csv",
]

[tool.ruff]
src = ["src"]
line-length = 100
target-version = "py39"
extend-exclude = ["docs/conf.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/**" = ["S101", "D103"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--verbose",
    "--cov=tncp_researchimagery",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src/tncp_researchimagery"]
omit = ["*/tests/*", "*/cli/*"]

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'